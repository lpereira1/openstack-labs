---
date: "2017-11-07"
draft: true
weight: 260
title: "Lab 28a - Creating an OpenStack Image"
---

The images we normally download are usually not what we actually want to install on our cloud. It is often better to create a "golden image" that includes 
the common modications you would make to an instance once it is booted. This way, you only have to perform these mundane tasks just once.
There many ways to create an image, here are two that we find most useful at Alta3 Research. 

### Use guestfish when you just need to tweak an existing image. If you need to make heavy changes, use the alternative method as phase 2 of this lab. 
On beachhead, install the following environment:

1. Get your OpenStack client installed

  `sudo apt-get install python-pip`
  `sudo python -m pip install -U pi`
  `sudo pip install python-openstackclient`
  `vim admin.rc`

    ```
    export OS_PROJECT_DOMAIN_NAME=default
    export OS_USER_DOMAIN_NAME=default
    export OS_PROJECT_NAME=admin
    export OS_USERNAME=admin
    export OS_PASSWORD=<admin-password>
    export OS_AUTH_URL=http://os.alta3.com:35357/v3
    export OS_IDENTITY_API_VERSION=3
    export OS_IMAGE_API_VERSION=2
    export PS1="\[\e[33m\]\u\[\e[m\]@\[\e[36m\]\h\[\e[m\] (\[\e[35m\]admin\[\e[m\]) :\W\$ "
    ```

2. Install guestfish

   `sudo apt install libguestfs-tools`

3. wget the latest ubuntu image. Notice that the image size is 277 MB. (This is pretty small)

   `wget https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img`

4. Use guestfish to edit the image

    `sudo guestfish --rw -a xenial-server-cloudimg-amd64-disk1.img`
    `><fs> run`
    `><fs> list-filesystems`

    ```
    /dev/sda1: ext4
    ```

5. Take note of the filesystem name, in this case `/dev/sda1` and mount it at `/`.

    `><fs>` `mount /dev/sda1  /`

6. Issue a command just to see how to issue a classic bash command. Note that this command is executed inside guestfish. Don't forget to wrap your command in ququotes!

    `command 'ls /etc/cloud'`

7. Now edit a file. Notice that the vim session pops up with the contents of the file ready for editting! Edit as you see fit. Vim is actually running on your native instance, NOT in the guestfish image. When you save the file, guestfish will slide that file you just editted back into the .img file.

   `><fs>` `edit /etc/cloud/cloud.cfg`

8. That gives you an idea what guestfish can do. Use it for touching up an existing image that only needs some tweaking. If heavy changes are necessary, here is what we do:


### Creating a new OpenStack image using OpenStack.

Use this technique if you need to make many changes to an image. 

1. stop nova instance

   `nova stop <instance name>`

2. create snapshot

   `nova image-create --poll <instance-name> <snapshot name>`

3. Register snapshot ID

   `cinder snapshot-list`

4. Create a new cinder volume from snapshot

   `cinder create --snapshot-id <ID> <size in MB>

5. Register new cinder volume

   `cinder list`

6. Convert cinder volume and upload image to the glance

   `cinder upload-to-image --disk-format qcow2 d06881e8-847a-44b6-9ad9-9c4f85bc2e41 node-template`

7. Wait for image to be available (not uploadin)   
   
